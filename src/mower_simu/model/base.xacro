<?xml version="1.0"?>
<robot name="microbot" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="BASE_LINK_MASS"   value="10" /> 
    <xacro:property name="BASE_LINK_LENGTH" value="0.50"/>
    <xacro:property name="BASE_LINK_WIDTH" value="0.40"/>
    <xacro:property name="BASE_LINK_HEIGHT" value="0.20"/>

    <xacro:property name="WHEEL_MASS"   value="1" /> 
    <xacro:property name="WHEEL_RADIUS" value="0.1"/>
    <xacro:property name="WHEEL_WIDTH" value="0.05"/>
    <xacro:property name="WHEEL_POS_X" value="0.2"/>  
    <xacro:property name="WHEEL_POS_Y" value="0.2"/>  

    <xacro:property name="CASTER_MASS" value="0.2"/>
    <xacro:property name="CASTER_RADIUS" value="0.05"/>


    <material name="Black">
        <color rgba="0.2 0.2 0.2 1"/>
    </material>

    <material name="Grey">
        <color rgba="0.7 0.7 0.7 1"/>
    </material>

        
    <material name="DarkGrey">
        <color rgba="0.3 0.3 0.3 1"/>
    </material>
    <material name="Blue">
        <color rgba="0.0 0.2 1 1"/>
    </material>
    <material name="Red">
        <color rgba="1 0.2 0.2 1"/>
    </material>
    <material name="Green">
        <color rgba="0 1 0 1"/>
    </material>


    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="box_inertial_matrix" params="m a b c">
       <inertial>
          <mass value="${m}" />
           <inertia ixx="${m*(b*b+c*c)/12}" ixy = "0" ixz = "0"
              iyy="${m*(c*c+a*a)/12}" iyz = "0"
              izz="${m*(a*a+b*b)/12}" /> 
       </inertial>
    </xacro:macro>

 

    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>


    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="${WHEEL_POS_X} 0 ${BASE_LINK_HEIGHT/2 + CASTER_RADIUS*2}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>

    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${BASE_LINK_LENGTH} ${BASE_LINK_WIDTH} ${BASE_LINK_HEIGHT}" />
            </geometry>
            <material name="Grey"/>
        </visual>
        <collision>
            <origin xyz=" 0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="${BASE_LINK_LENGTH} ${BASE_LINK_WIDTH} ${BASE_LINK_HEIGHT}"/>
            </geometry>
        </collision>   
        <box_inertial_matrix  m="${BASE_LINK_MASS}" a="${BASE_LINK_LENGTH}" b="${BASE_LINK_WIDTH}"  c="${BASE_LINK_HEIGHT}" />            
    </link>
    <gazebo reference="base_link">
        <material>Gazebo/Yellow</material>
    </gazebo>        


    <joint name="front_caster_joint" type="continuous">
        <origin xyz="${WHEEL_POS_X} 0 ${-1*BASE_LINK_HEIGHT/2 - CASTER_RADIUS}" rpy="0 0 0"/> 
        <parent link="base_link"/>
        <child link="front_caster_link"/>
        <axis xyz="1 1 0"/>
    </joint>/

    <link name="front_caster_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${CASTER_RADIUS}"/>
            </geometry>
            <material name="DarkGrey"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${CASTER_RADIUS}" />
            </geometry>
        </collision>      
        <sphere_inertial_matrix  m="${CASTER_MASS}" r="${CASTER_RADIUS}" />
    </link>
    <gazebo reference="front_caster_link">
        <material>Gazebo/DarkGrey</material>
        <mu1>0</mu1>
        <mu2>0</mu2>
        <kp>10000000</kp>
        <kd>1</kd>            
    </gazebo>   
    


    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="${-WHEEL_POS_X} ${reflect * WHEEL_POS_Y} ${-1*BASE_LINK_HEIGHT/2}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>

        </joint>
        
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0"  rpy="${M_PI/2} 0 0"/>
                <geometry>
                    <cylinder radius="${WHEEL_RADIUS}" length="${WHEEL_WIDTH}"/>
                </geometry>
                <material name="Black"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${WHEEL_RADIUS}" length = "${WHEEL_WIDTH}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${WHEEL_MASS}" r="${WHEEL_RADIUS}" h="${WHEEL_WIDTH}" />            
        </link>
        <gazebo reference="${prefix}_wheel_link">
            <material>Gazebo/Black</material>
	        <mu1>10000000</mu1>
		    <mu2>10000000</mu2>
		    <kp>10000000</kp>
		    <kd>1</kd>            
        </gazebo>

        <transmission name="${prefix}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>

    </xacro:macro>


 
 
    <wheel prefix="left" reflect="1"/>
    <wheel prefix="right" reflect="-1"/>


    <gazebo>
        <plugin name="differential_drive_controller" 
                filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>false</publishWheelTF>
            <robotNamespace>/</robotNamespace>
            <odometrySource>world</odometrySource>

            <publishOdomTF>false</publishOdomTF>
            <broadcastTF>0</broadcastTF>
            <publishTf>0</publishTf>
            <publishWheelJointState>false</publishWheelJointState>

            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <legacyMode>true</legacyMode>
            <leftJoint>left_wheel_joint</leftJoint>
            <rightJoint>right_wheel_joint</rightJoint>
            <wheelSeparation>${WHEEL_POS_Y*2}</wheelSeparation>
            <wheelDiameter>${2*WHEEL_RADIUS}</wheelDiameter>

            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>2</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame> 
            <odometryTopic></odometryTopic> 
            <robotBaseFrame>base_footprint</robotBaseFrame>
        </plugin>


        <plugin name="joint_state_publisher_left" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <namespace>microbot</namespace>
            </ros>
            <jointName>left_wheel_joint</jointName>
            <updateRate>100</updateRate>
        </plugin>

        <plugin name="joint_state_publisher_right" filename="libgazebo_ros_joint_state_publisher.so">
            <ros>
                <namespace>microbot</namespace>
            </ros>
            <jointName>right_wheel_joint</jointName>
            <updateRate>100</updateRate>
        </plugin>

    </gazebo> 



</robot>